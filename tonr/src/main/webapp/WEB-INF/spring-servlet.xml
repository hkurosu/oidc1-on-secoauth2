<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<mvc:default-servlet-handler />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<context:property-placeholder
		location="classpath:/keyhole.properties,classpath:/sparklr.properties" />

	<import resource="classpath:/spring/oidc-client-filter.xml" />
	
	<!--define an oauth 2 resource for sparklr -->
	<import resource="classpath:/spring/oauth2-resources.xml" />


	<http access-denied-page="/login.jsp?authorization_error=true"
		xmlns="http://www.springframework.org/schema/security"
		authentication-manager-ref="authenticationManager"
		entry-point-ref='oauthAuthenticationEntryPoint'>
		<intercept-url pattern="/sparklr/**" access="ROLE_USER" />
		<intercept-url pattern="/facebook/**" access="ROLE_USER" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />	
 		<anonymous/>
 		<sec:logout invalidate-session="true" success-handler-ref="oauth2LogoutSuccessHandler" />
 		<custom-filter ref="oauth2ClientFilter"	 before="PRE_AUTH_FILTER" />
		<custom-filter ref="oauth2SingleSignOnFilter" position="FORM_LOGIN_FILTER" />
	</http>

	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
 		<property name="loginFormUrl" value="${loginFormUri}"/>
 	</bean>

	<authentication-manager xmlns="http://www.springframework.org/schema/security" alias="authenticationManager" />
	
	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
		
	
	<!--apply the oauth client context -->
	<oauth:client id="oauth2ClientFilter" />

	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean
					class="org.springframework.security.oauth.examples.tonr.converter.AccessTokenRequestConverter" />
			</set>
		</property>
	</bean>

	<bean id="contentViewResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="defaultViews">
			<bean
				class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
		</property>
	</bean>

	<!--Basic application beans. -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="sparklrController"
		class="org.springframework.security.oauth.examples.tonr.mvc.SparklrController">
		<property name="sparklrService" ref="sparklrService" />
	</bean>

	<bean id="sparklrRedirectController"
		class="org.springframework.security.oauth.examples.tonr.mvc.SparklrRedirectController">
		<property name="sparklrService" ref="sparklrRedirectService" />
	</bean>

	<bean id="facebookController"
		class="org.springframework.security.oauth.examples.tonr.mvc.FacebookController">
		<property name="facebookRestTemplate">
			<oauth:rest-template resource="facebook">
				<property name="messageConverters">
					<list>
						<bean
							class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
							<property name="supportedMediaTypes">
								<list>
									<bean class="org.springframework.http.MediaType">
										<!--facebook sends its json as text/javascript for some reason -->
										<constructor-arg value="text" />
										<constructor-arg value="javascript" />
									</bean>
									<bean class="org.springframework.http.MediaType">
										<constructor-arg value="application" />
										<constructor-arg value="json" />
									</bean>
								</list>
							</property>
						</bean>
					</list>
				</property>
			</oauth:rest-template>
		</property>
	</bean>
	
	<bean id="accessTokenProvider" class="org.springframework.security.oauth2.client.token.AccessTokenProviderChain">
		<constructor-arg type="java.util.List">
			<list value-type="org.springframework.security.oauth2.client.token.AccessTokenProvider">
				<bean class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeAccessTokenProvider"/>
				<bean class="org.springframework.security.oauth2.client.token.grant.implicit.ImplicitAccessTokenProvider"/>
				<bean class="org.springframework.security.oauth2.client.token.grant.password.ResourceOwnerPasswordAccessTokenProvider"/>
				<bean class="org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsAccessTokenProvider"/>
			</list>
		</constructor-arg>
		<property name="clientTokenServices" ref="clientTokenServices" />
	</bean>

	<bean id="sparklrService"
		class="org.springframework.security.oauth.examples.tonr.impl.SparklrServiceImpl">
		<property name="sparklrPhotoListURL" value="${sparklrPhotoListURL}" />
		<property name="sparklrTrustedMessageURL" value="${sparklrTrustedMessageURL}" />
		<property name="sparklrPhotoURLPattern" value="${sparklrPhotoURLPattern}" />
		<property name="sparklrRestTemplate">
			<oauth:rest-template resource="sparklr"	access-token-provider="accessTokenProvider" />
		</property>
		<property name="trustedClientRestTemplate">
			<oauth:rest-template resource="trusted"	access-token-provider="accessTokenProvider" />
		</property>
	</bean>

	<bean id="sparklrRedirectService"
		class="org.springframework.security.oauth.examples.tonr.impl.SparklrServiceImpl">
		<property name="sparklrPhotoListURL" value="${sparklrPhotoListURL}" />
		<property name="sparklrPhotoURLPattern" value="${sparklrPhotoURLPattern}" />
		<property name="sparklrRestTemplate">
			<oauth:rest-template resource="sparklrRedirect" />
		</property>
	</bean>

</beans>
